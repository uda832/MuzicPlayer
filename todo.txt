Completed:
    + Set up Song class
    + Query songs
    + Populate ListView
    + SongAdapter
    + Set up service (which will do the actual playing)
    + Notification && Jump to app from notif 
    + NOISY handler
    + Asset drop 
    + Bugfix: polish controller
    + Place controller_bar view in main activity
    + InitControllerBar():
        + grabviews
        + create listeners
            + rootview -- Intent to go to NowPlayingFullscreen activity
            + play/pause
    + Asset drop: icons
    + Controller_bar: (Replace MediaController)
        + UpdateControllerBar():
            + currentSong = musicService.getSongPos()
            + update view contents:
        + Replace setController calls with updateControllerBar calls
    + Bugfix: prevent play button from moving when song title is long
        + Replace controller_bar's rootview with RelativeLayout
        + Make songTitle marquee (scroll if too long)
    + Display albumArt for each song
        + Import PICASSO library
        + Store album id in each song 
        + SongAdapter.getView:
            - grab uri of albumArt using albumId
            - display into imageView using PICASSO
        + Song.getAlbumArt(long albumId)
        + Polish song layout
    + Artwork on ControllerBar:
        + Get album artwork for given songId 
        + Play/pause button:
            + background color
            + tint color
    + Optimize SongAdapter.getView():
        + Use holder to reduce findViewById calls
        + Replace songOnClick with OnItemClickListener since tags can't be used
    + Set background to current song's artwork
        + Implement BlurTransformation class
        + Change updateControllerBar to updateViews
            + Include Picasso call to modify background
    + Modify code so that updateViews is called before the song is loaded 
    + Fix AppBar: disable scroll and make transparent
    + Bugfix: inflation fails oncreateview
        * Issue: populateSongsList not yet called when onCreateView is invoked
        * Fix: call populateSongsList directly inside getPermission
    - Now Playing SlidingPanel
        + Modify activity_main
            - Make SlidingPanel root
            - Use PercentRelativeLayout for nowPlaying
        + Change npRoot to PercentRelativeLayout
        + Change initContollerBar to initControllers()
            + Initialize the nowPlaying panel's views
        + Modify updateViews()
            + Add code to update the nowPlaying panel's views
        - Seekbar:
            + Set up layout
            + Set up changeListener
            + Setup current-time, max-time views
            + Hook up with MediaPlayer
                + Define BroadcastReciever b
                    + onCreate in main activity: b = new BroadCastReciever
                    + onResume: register
                    + onPause: unregister
                + onPrepared inside Service:
                    + sendSeekbarInfo()
                        + send
            + Add textView to show current and max song's duration
    + Refactor code
    + Updating SeekBar:
        + Bugfix:
            + Issue: Seekbar dragging always made it reset to 0
            + Fix: musicService.seek(progress * 1000) inside onProgressChanged 
        + Update currentTime textView while dragging
        + Stop the seekbarUpdater when playback is paused and resume once isPlaying
            + startSeekbarUpdater
            + stopSeekbarUpdater
    + Setup Fav button
    + OnSongClick:
        + Expand NPpanel
    + Setup Album view
        + Create album.xml
        + onCreateView for album
        + Album, AlbumAdapter classes
        + query and populate methods for albums
    + fragment_host.xml
        + Wrap viewpager + tablayout inside a Fragment
        + Replace viewpager with framelayout activity_main
    +  Feat/frag update:
        + Finish/fix-bugs related to HostFragment 
    + Albums.OnItemClick behavior
        + Replace ViewPager fragment with Album fragment 
//end-completed


NextCommit:
    + ViewPager text: change to white
    + fragment_album.xml:
        - Change background to album art
        - 1/3 Screen with art, name, artist, year, numSongs
        - Album Fragment:
            - ListView Tracks (trackNum, TrackName, duration)
    + Set up AlbumFragment class:
        + AlbumFragment.onAttach:
            + Modify Song class to hold song's trackNum and duration
            + album_track.xml
                + trackNum
                + trackName
                + trackDuration
            + Traverse and grab songsList and grab songs with same album id
            + AlbumTracksAdapter
                + songOnClick mod:
                    + Pass current album tracks to MusicService
                    + Modify MusicService to handle cases when playing from album
        + AlbumFragment.onCreateView:
            + Grab views
            + Populate views:
                + TopArt
                + Metadata
                + listView


CurrentTask:
**********************************************************************
        


    CurrentTask:


    Bugfix:
        - fragment_album.ListView size is weird
        - album_track: space out elements 
        - change color of metadata
        - title and metadata background should be darkened to show it more clearly





    NextTask:
        - Create sample for album fragment -- put placeholders in each field



    - Bugfix: audioFocusGain starts playing (even when playback is paused)




   
//end**********************************************************************

NextTask:
    - Possible feature for AlbumFragment
        - Reddit-like expandable/scrollable album art
    - Implement upNext Queue
        - Add drop down menu to song.xml (w/ "Add to Queue") 

    - Controller Bar Top line should show current seek time
    - Mods:
        - Empty albums and songs should have placeholder artwork
    - Set up Fragments:
        - Songs
            - LongClick for contextual action mode (CheckBox)
                - Menu:
                    - Add selected songs to playlist
        - Artists:
            - ListView Item:
                - first album artwork, artistName, numTracks 
            - Single Artist:
                - Title=ArtistName
                - Expandable ListView Item:
                    - Album(art, year)
                        - ontouch to expand/collapse
                        - tracks ListView
        - Playlists
    - Now Playing SlidingPanel
        - Fav button Functionality
                - auto add to "Favourites" playlist
                - Adapter.getView: check if it exists in "Favourites" playlist
        - Prev, Play/pause, Next
        - Shuffle Button
    - Make panel draggable only on "Metadata", and "ControllerBar" section
 

Bugs:
    - While paused, getting a message starts playing
    - Audio_focus temporary loss (i.e. message) breaks app
    + Inflate fail (onCreateView invoked only when viewPager is scrolled)
        * Issue: onCreateView is called before populateSongsList is called


TESTS before deploying:
    - Analyze memory consumption (compared to other music players)
        - Look for room to optimize usage
    - Analyze CPU usage (while visible vs. in the background)



FutureTasks:
    - Now Playing SlidingPanel
        - MoreMenu -- Handle actions
                - Go to Artist
                - Go to Album
                - Add to Playlist
                - Settings
    - Animate hide when fragment is scrolled
    - Use headphone controllers
        - Defaults (pause/play, double-click to playNext, triple for prev etc.)
    - SongAdapter:
        - Need to grab images (leave artwork for now)
    * Contextual Action Menu
        * Add to playlist
    * Alphabetical Scroll Bar


Possible Features:
    * Full Access widget on Lock Screen
    * Background: fill/fade with current artwork 
    * Background: soundcloud-like animate according to playtime

