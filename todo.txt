//Completed
    + Set up Song class
    + Query songs
    + Populate ListView
    + SongAdapter
    + Set up service (which will do the actual playing)
    + Notification && Jump to app from notif 
    + NOISY handler
    + Asset drop 
    + Bugfix: polish controller
    + Place controller_bar view in main activity
    + InitControllerBar():
        + grabviews
        + create listeners
            + rootview -- Intent to go to NowPlayingFullscreen activity
            + play/pause
    + Asset drop: icons
    + Controller_bar: (Replace MediaController)
        + UpdateControllerBar():
            + currentSong = musicService.getSongPos()
            + update view contents:
        + Replace setController calls with updateControllerBar calls
    + Bugfix: prevent play button from moving when song title is long
        + Replace controller_bar's rootview with RelativeLayout
        + Make songTitle marquee (scroll if too long)
    + Display albumArt for each song
        + Import PICASSO library
        + Store album id in each song 
        + SongAdapter.getView:
            - grab uri of albumArt using albumId
            - display into imageView using PICASSO
        + Song.getAlbumArt(long albumId)
        + Polish song layout
    + Artwork on ControllerBar:
        + Get album artwork for given songId 
        + Play/pause button:
            + background color
            + tint color
    + Optimize SongAdapter.getView():
        + Use holder to reduce findViewById calls
        + Replace songOnClick with OnItemClickListener since tags can't be used
    + Set background to current song's artwork
        + Implement BlurTransformation class
        + Change updateControllerBar to updateViews
            + Include Picasso call to modify background
    + Modify code so that updateViews is called before the song is loaded 
    + Fix AppBar: disable scroll and make transparent
    + Bugfix: inflation fails oncreateview
        * Issue: populateSongsList not yet called when onCreateView is invoked
        * Fix: call populateSongsList directly inside getPermission
    - Now Playing SlidingPanel
        + Modify activity_main
            - Make SlidingPanel root
            - Use PercentRelativeLayout for nowPlaying
        + Change npRoot to PercentRelativeLayout
        + Change initContollerBar to initControllers()
            + Initialize the nowPlaying panel's views
        + Modify updateViews()
            + Add code to update the nowPlaying panel's views
        - Seekbar:
            + Set up layout
            + Set up changeListener

//end-completed



Next Commit:
    - Seekbar Functionality:
        - Setup currentTime, maxTime views
        - Connect to MediaPlayer inside MusicService

        - Update the seekbar's times and progress using a broadcaster
            - Setup BroadcastReceiver in MainActivity which grabs the
              timeInfo sent from the MusicService
            - Setup broadcast sender method which contains the current
              song's time info
            - Invoke sendBroadcast method when the MediaPlayer is prepared


Current Task:
    - Now Playing SlidingPanel
        - Seekbar:
            + Setup current-time, max-time views
            + Hook up with MediaPlayer
                + Define BroadcastReciever b
                    + onCreate in main activity: b = new BroadCastReciever
                    + onResume: register
                    + onPause: unregister
                + onPrepared inside Service:
                    + sendSeekbarInfo()
                        + send

                    
            - Add textView to show current and max song's duration


Bugfix:
    * Sliding progress doesn't work
    * Always restarts the song from the beginning!


    

Bugs:
    - Audio_focus temporary loss (i.e. message) breaks app
    - Selecting a song while paused doesn't refresh play button
    + Inflate fail (onCreateView invoked only when viewPager is scrolled)
        * Issue: onCreateView is called before populateSongsList is called


TESTS before deploying:
    - Analyze memory consumption (compared to other music players)
        - Look for room to optimize usage
    - Analyze CPU usage (while visible, in the background)



Future Tasks:
    - Now Playing SlidingPanel
        - LongClick on Image Popup/Context menu
            - Go to Artist
            - Go to Album
            - Add to Playlist
            - Settings
        - Controls:
            - Fav button (auto add to "Fav" playlist)
            - Seekbar
            - Current time, total-current time 
            - Shuffle
            - Prev, Play/pause, Next
    - Animate hide when fragment is scrolled
    - Use headphone controllers
        - Defaults (pause/play, double-click to playNext, triple for prev etc.)
    - Set up Fragments:
        - Songs
            + ListView item:
                + Artwork
                + Song name
                + Artist Name
            - LongClick for contextual action mode (CheckBox)
                - Menu:
                    - Add to playlist
                    - Settings
        - Albums
            - GridView
                - Artwork
                - Album name
                - Artist
            - Single Album:
                - 1/3 Screen with art, name, artist, year, total duration
                - ListView Tracks (trackNum, TrackName, duration)
        - Artists:
            - ListView Item:
                - first album artwork, artistName, numTracks 
            - Single Artist:
                - Title=ArtistName
                - Expandable ListView Item:
                    - Album(art, year)
                        - ontouch to expand/collapse
                        - tracks ListView
        - Playlists
    - SongAdapter:
        - Need to grab images (leave artwork for now)
    * Contextual Action Menu
        * Add to playlist
    * Alphabetical Scroll Bar



Possible Features:
    * Full Access widget on Lock Screen
    * Background: fill/fade with current artwork 
    * Background: soundcloud-like animate according to playtime

